1. The security flaw that I found was abundant access and full privileges for a memo application that does not need it. The SUID bit is set for this application so it has root access, and any path name can be given as input so it can access any file on the system and display it. My demo exploit works by giving /etc/shadow as a parameter to the elinks command to access memo.cgi, and thus accessing the contents of /etc/shadow and saving it in shadow.txt. I fixed it by disabling the SUID bit, creating a memo usergroup only for the people who need access to memo, and limiting the file pathnames that can be given to the memo directory inside of the group's home directory. And directory traversal upwards and backtracking are prevented by removing ".." from the path name.

2.1. This breach was very serious because since memo.cgi has all the permissions to run as root, any user with access to it has access to the entire system and could easily wreack havoc. The server should clearly limit access to this file so not just anyone has sudo capabilities. Thus, a specific memo usergroup should be created only for the people who need access to memo. Moreover, the SUID bit should be disabled for memo.cgi to prevent it from having these root capabilities, and the sticky bit should be enabled for the memo directory in the memo usergroup's home directory so users cannot delete each other's files. The path should also be checked for directory traversal to prevent users from accessing content outside the directory.

2.2. As mentioned earlier, this method would not work because the user can still traverse directories using ".." in the path name after these prefixes. Thus, we still have to prevent backtracking and implement the other safety features mentioned above.

2.3. This exploit was also interesting. The safety measures against this one were definitely more complicated than the first one and took more thinking like a hacker to figure out. It was also fun to come up with ways I could take control of the system using a simple memo program.