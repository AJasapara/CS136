1. The security flaw that I found was a buffer overflow susceptibility in webserver.c where the get_header() method tried to copy the header value into a fixed-length buffer of size 1024. Thus, all I had to do was enter a very long string of data (I even copied my entire payload twice to be safe) to crash the webserver. So my exploit makes, installs, and starts the server, and then uses netcat to give it this massive payload to crash the server. I fixed this exploit by adding a simple check to make sure the header length is not greater than 1024, and if it is, then the header is cut off at 1024, thus preventing any buffer overflows.

2.1